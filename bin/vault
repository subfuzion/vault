#! /usr/bin/env node

var cli = require('commander');
var pkg = require('../package.json');
var vault = require('../lib/vault');
var chalk = require('chalk');

if (!process.env.VAULT_PASS) {
  console.error('Vault environment not set: missing VAULT_PASS');
  process.exit(1);
}

cli
  .version(pkg.version)
  .usage('set <key> <text-to-encrypt>');

cli
  .command('set <key> <plaintext>')
  .description('Encrypt the text and store it under the key in the vault')
  .action(function(key, plaintext) {
    vault.put(key, plaintext, function(err) {
      if (err) {
        console.error(err.message);
        helpReminder();
      }
    });
  });

cli
  .command('get <key>')
  .description('Get the unencrypted text stored under the key in the vault')
  .action(function(key) {
    vault.get(key, function(err, plainText) {
      if (err) {
        console.error(err.message);
        helpReminder();
      }
      console.log(plainText || 'no entry for key: ' + key);
    });
  });

cli
  .command('remove <key>')
  .description('Remove the text entry stored under the key in the vault')
  .action(function(key) {
    vault.remove(key, function(err) {
      if (err) {
        console.error(err.message);
        helpReminder();
      }
    });
  });

cli.parse(process.argv);

function helpReminder() {
  console.log(chalk.gray('if you need help, enter: ') + 'vault --help');
  process.exit(1);
}
